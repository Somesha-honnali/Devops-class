#!/bin/bash
sed 's/PasswordAuthentication no/PasswordAuthentication yes/' -i /etc/ssh/sshd_config
systemctl restart sshd
service sshd restart

#TODO: replace bob with your desired username
useradd bob
# TODO: replace password123 with desired password and change bob to your username chosen in useradd 
echo "password123" | passwd --stdin ec2-user
echo "password123" | passwd --stdin root

Advantages of Ansible
Although there are various advantages of using Ansible in your infra but below are few and important advantages.

Agentless
No need to install nodes on remote servers
Totally rely on SSH
Various big organisations uses Ansible such as  Apple, NASA, Juniper etc.

1. Install Ansible using EPEL Repository
Download epel repository on the amazon linux 2 instance as follows,

$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
Next, Install epel repository using yum.

$ sudo yum install epel-release-latest-7.noarch.rpm
Update epel repository as follows,

$ sudo yum update -y
Now install all individual packages inside the repository along with ansible.

$ sudo yum install python python-devel python-pip openssl ansible -y
2. Install Ansible using amazon-linux-extras Repository
Ansible package can be installed on amazon linux using amazon provided packages.

$ sudo amazon-linux-extras install ansible2
Check Ansible version
To verify whether Ansible is installed on your machine, you can verify it as follows,

$ ansible --version

ansible 2.9.13
config file = /etc/ansible/ansible.cfg
configured module search path = [u'/root/.ansible/plugins/modules', u'/usr/share/ansible/plugins/modules']
ansible python module location = /usr/lib/python2.7/site-packages/ansible
executable location = /bin/ansible
python version = 2.7.18 (default, Aug 27 2020, 21:22:52) [GCC 7.3.1 20180712 (Red Hat 7.3.1-9)]
Configure Ansible on Amazon Linux-2
Firstly, create new users on master & client machines.


[root@ip-192-168-10-149 ~]# sudo  useradd ansadmin
[root@ip-192-168-10-149 ~]# sudo  passwd ansadmin
Changing password for user ansadmin.
New password:
BAD PASSWORD: The password is shorter than 8 characters
Retype new password:
passwd: all authentication tokens updated successfully.
[root@ip-192-168-10-149 ~]#


Grant admin access to created user for master & client machines. You need login as root to make changes here. We have added ansadmin user in sudoers file and enable authentication without password each time.

$ sudo visudo
sudoer file

## Allow root to run any commands anywhere
root    ALL=(ALL)       ALL
ansadmin ALL=(ALL)       NOPASSWD: ALL

Thereafter, Allow password authentication to yes so that ldap users can login using username & password on master & client machines

$ sudo vi /etc/ssh/sshd_config
sshd_config file
Uncomment above highlighted line and enable password authentication to YES. Restart sshd service.

$ sudo service sshd restart
Login as ansadmin user and generate public and private keys on client machine.

$ ssh-keygen
ssh-key for passwordless authentication
Now you need to copy ssh keys from client to master machine. First check the private ip address of the master node as follows,

$ ifconfig -a
ifconfig on aws ec2 instance
Copy the public key file from client to master node.

$ ssh-copy-id -i /home/ansadmin/.ssh/id_rsa.pub ansadmin@172.31.17.1
sshd_config file
To verify this, try to login to client machine from master using ssh method.


$ ssh ansadmin@172.31.17.2
It will ask password for the first time. Next time it won’t ask password. Here, 172.31.17.2 is the private ip address of client node.

Managing inventory file on Master
A default hosts file is created while ansible installation. To manage your infrastructure you need to make entries of your available server machines in this hosts file.

$ sudo  vi /etc/ansible/hosts
Insert client machines ip address into the inventory file:

ansible host file
Simply we put client machine ip address here. You can create custom inventory file if you do not want to use default hosts file.


Managing inventory file on Master
A default hosts file is created while ansible installation. To manage your infrastructure you need to make entries of your available server machines in this hosts file.

$ sudo  vi /etc/ansible/hosts
Insert client machines ip address into the inventory file:

ansible host file
Simply we put client machine ip address here. You can create custom inventory file if you do not want to use default hosts file.

Perform Ping test from Master to Client machines
Ansible contains various modules to manage IT infrastructure.  Here, we will use ping module to check connection status between master and client node as follows,

$ ansible -m ping ec2-servers
ansible ping test 
Finally, client machine can be accessed from master node through ansible.







Perform Ping test from Master to Client machines
Ansible contains various modules to manage IT infrastructure.  Here, we will use ping module to check connection status between master and client node as follows,

$ 
ansible ping test 
Finally, client machine can be accessed from master node through ansible.


------------------------------------------------------------------------------------

webex meeting link

https://meet296.webex.com/meet/pr26410753776



-----------
Ansible linux -m shell -a “ free -m” 

Ansible all -m shell -a “ free -m” 



To list all  ansible modules 
$ ansible-doc -l

$ ansible-doc -l | grep shell 

[root@ip-192-168-10-8 ~]#  ansible-doc -l | grep shell
shell                                                         Execute shell commands on targets
vmware_vm_shell                                               Run commands in a VMware guest operating system
win_shell                                                     Execute shell commands on target hosts

------------------------------

https://docs.ansible.com/ansible/2.9/modules/list_of_all_modules.html

